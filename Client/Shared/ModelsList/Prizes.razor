@page "/Prizes"
@layout AdminMenuLayout
@inject IPrizeService PrizeService

<ActionMenu ModelName="Prize" />

<div>

    @if (PrizeService.Prizes == null || PrizeService.Prizes.Count <= 0)
    {
        <p>@PrizeService.Message</p>
    }
    else
    {
        <table>

            <tr>
                <th>Пользователь</th>
                <th>Имя</th>
                <th>Текущая эра</th>
                <th>Очки культуры</th>
                <th></th>
                @*<th></th>*@
            </tr>
            @for (int i = 0; i < PrizeService.Prizes.Count(); i++)
            {
                var prize = PrizeService.Prizes[i];
                <tr>
                    <td>@prize.Name</td>
                    <td>@prize.Chance</td>
                    <td>@prize.Color</td>


                    <td><button class="btn btn-danger" @onclick="() => Update(prize)">Обновить</button></td>
                    @*<td><button class="btn btn-danger" @onclick="() => Remove(district.ID)">Удалить</button></td>*@

                </tr>
            }

        </table>
    }
</div>

@code {

private string Message { get; set; } = "Загрузка форматов...";

    protected override async Task OnInitializedAsync()
    {

        await PrizeService.GetAll();
    }

    private async void Remove(int prizeID)
    {
        await PrizeService.Remove(prizeID);
    }

    private async void Update(Prize prize)
    {
        await PrizeService.Update(prize);
    }
}
